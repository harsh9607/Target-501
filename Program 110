// Spiral printing
#include<iostream>
using namespace std; 
const int row_A = 4, col_A = 4, row_B = 4, col_B = 4;


void Display(int r, int c, int C[][col_B])
{
	for (int i = 0; i < r; i++)
	{
		for (int j = 0; j < c; j++)
		{
			cout << C[i][j] << '\t';
		}
		cout << endl;
	}
}
	
void waveDisplay(int C[][col_B])
{
	int k = 0;
	int col_b = col_B;
	int row_a = row_A;

	for (int i = 0; i < col_b; i++)
	{   
		for (int j = 0; j < row_a; j++)
		{
			if (k % 2 == 0)
			{
				cout << C[j][i]<<endl;
			}
			else
			{
				cout << C[row_A - j -1][i] << endl;
			}
		}
		
		k++; 
	}
		
}

void Down(int r, int r_max, int col, int C[][col_B] , int&ctr)
{
	for (int i = r ;i <= r_max; i++)
	{
		ctr++; 
		cout << C[i][col]<<'\t';
	}
}

void Up(int r, int r_max, int c_max, int C[][col_B], int& ctr)
{
	for (int i = r_max; i >=r ; i--)
	{
		ctr++;
		cout << C[i][c_max] << '\t';
	}
}

void Right(int r_max, int col, int c_max, int C[][col_B], int &ctr)
{
	for (int i = col; i <= c_max; i++)
	{
		ctr++;
		cout << C[r_max][i] << '\t';
	}
}

void Left(int r, int col, int c_max,int C[][col_B], int& ctr)
{
	for (int i = c_max; i >= col; i--)
	{
		ctr++;
		cout << C[r][i] << '\t';
	}
}


void Spiral(int C[row_A][col_B])
{
	int ctr = 0; 
	int ctr_max = row_A * col_B; 
	int k = 1 , r = 0 , col=0 , r_max = row_A-1 , c_max=col_A-1; 
	while (ctr < ctr_max)
	{
		switch (k)
		{
		case 1: Down(r, r_max, col, C , ctr);
			    col++;
				k++;
				break; 
		case 2: Right(r_max, col, c_max,C, ctr);
			    r_max--;
				k++;
				break; 
		case 3: Up(r, r_max, c_max, C, ctr);
			    c_max--;
				k++;
				break;
		case 4: Left(r, col, c_max, C, ctr);
         		r++;
				k++;
				break; 
		}
		
		if (k == 5)
		{
			k = 1;
		}


		
	}



	
}


int main()
{    
	
	int A[row_A][col_A] = {
		{ 1 , 0, 0 ,0 },
	    { 0 , 1 ,0 , 0},
	    { 0 , 0 ,1 , 0},
		{ 0 , 0 , 0, 1}

	};

	int  B[row_B][col_B] = { {1,2,3,4},{4,5,7,8},{63,34,10,11},{1,2,3,5} };
		

	int C[row_A][col_A];
	
	if (row_B != col_A)
	{
		cout << "Error ! Non compatible for multiplication\n";
		exit(0);
	}
	// Simple multiplication 
	for (int i = 0; i < row_A; i++)
	{
		for (int j = 0; j < col_A; j++)
		{
			C[i][j] = 0; 

			for (int k = 0; k < col_A; k++)
			{
				C[i][j] += A[i][k] * B[k][j]; 

		    }
		}
	}

	Display(row_A, col_B ,C );
	//waveDisplay(C);
	Spiral(C);
	return 0;
}
