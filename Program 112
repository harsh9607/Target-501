// Rotate a given matrix 90 degree clockwise. 

#include<iostream>
using namespace std; 
const int row_A = 4, col_A = 4, row_B = 4, col_B = 4;


void Display(int r, int c, int C[][col_B])
{
	for (int i = 0; i < r; i++)
	{
		for (int j = 0; j < c; j++)
		{
			cout << C[i][j] << '\t';
		}
		cout << endl;
	}
}
	


void Exitpoint(int C[][col_B])
{   /*
	0 = right
	1 = down
	2 = left
	3 = Up
	*/

	int flag = 0; 
	int r = 0, col = 0, r_max = row_A - 1, c_max = col_A - 1; 
	while (r <= r_max && col <= c_max && r>=0 && col>=0)
	{
		if (C[r][col] == 0 && flag==0 )
		{   // Right 
			 col++; 
		}

		else if (C[r][col] == 0 && flag == 1)
		{
			//Down
			r++;
		}

		else if (C[r][col] == 0 && flag == 2)
		{ 
			//Left
			 col--;
		}

		else if (C[r][col] == 0 && flag == 3)
		{   //Up
			 r--;
		}


		else if (C[r][col] == 1)
		{
			if (flag == 0)
			{
				flag = 1;
				r++;
			}
			else if (flag == 1)
			{
				col--;
				flag = 2;
			}
			else if (flag == 2)
			{
				r--; 
				flag = 3;
			}
			else if (flag == 3)
			{
				col++;
				flag = 0; 
			}

		}


	}

	if (r < 0)
	{
		cout << "Exit point :" << " ( 0 , " << col << " )";
	}
	else if (r > r_max )
	{
		cout << "Exit point : ( " << r_max << ", " << col << " )";
	}
	else if (col < 0)
	{
		cout << "Exit point : ( " << r << " , 0 )";
	}
	else if (col > c_max)
	{
		cout << "Exit point : ( " << r << ", " << c_max << " )";
	}


}

void Rotate_90(int C[][col_B] )
{
	int D[col_B][row_A]; 

	for (int i = row_A - 1; i >= 0; i--)
	{
		for (int j = 0; j <= col_B - 1; j++)
		{
			D[j][row_A-i-1] = C[i][j];
		}
	}
	Display(col_B , row_A , D); 
}


int main()
{    
	
	int A[row_A][col_A] = {
		{ 1 , 0, 0 ,0 },
	    { 0 , 1 ,0 , 0},
	    { 0 , 0 ,1 , 0},
		{ 0 , 0 , 0, 1}

	};

	int  B[row_B][col_B] = { {1,2,3,4},{4,5,7,8},{63,34,10,11},{1,2,3,5} };
		

	int C[row_A][col_A];
	
	if (row_B != col_A)
	{
		cout << "Error ! Non compatible for multiplication\n";
		exit(0);
	}
	// Simple multiplication 
	for (int i = 0; i < row_A; i++)
	{
		for (int j = 0; j < col_A; j++)
		{
			C[i][j] = 0; 

			for (int k = 0; k < col_A; k++)
			{
				C[i][j] += A[i][k] * B[k][j]; 

		    }
		}
	}
	cout << "Matrix =\n";
	Display(row_A, col_B, C);
	cout << "After 90 degree clockwise rotation =\n";
	Rotate_90(C);
	return 0;
}
