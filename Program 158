/* Approach 
ex - Say we have A[5] with values 1 , 1,30 ,30, 20 
Step 1. Find the occurence of all numbers in a Map 
Map<key> =  1    20   30
Value    =  2     1    2

Total elements = 5 ( 2 +  1 + 2 )  

Now loop over the Map which automatically stores our
Keys in sorted order (in c++ )  and check 
if 
    Val of that key + Value of all keys b4 it > Remaining values
    ex + ( for key 1 ) 
       ->      2    +      Nil                >   1+2 ( ie. 20 + 30's occurence)
       =       2 > 3 (false hence no ans++)
       
       + ( for key 20 ) 
       ->      2    +      1                 >   2 ( ie. 30's occurence)
       =       3 > 2 (true hence  ans++)
      
       - ( for key 30 ) 
       ->      2    +      3                 >   0 
       =       5 > 0 ( hence  ans++)
                  
At last print ans value    
*/
#include <iostream>
#include<algorithm>
#include<map>
using namespace std;

int main() {
	// your code goes here
	int t; cin>>t;
	while(t--)
	{
	    map<int,int> Map ; 
	    
	    int x,ans=0; 
	    cin>>x; 
	    int A[x];
	    for(int i=0 ; i<x ; i++)
	    {
	        cin>>A[i];
	        Map[A[i]]++;
	    }
	    

	    int rsum=0; 
	    for(auto it : Map)
	    {
	        if(it.second + rsum > (x - it.second - rsum))
	        {
	            ans+= it.second; 
	        }
	        rsum+=it.second;
	    }
	    
	    cout<<ans<<endl;
	// t --     
	}
	
	return 0;
}
