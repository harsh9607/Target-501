// Heapsort 
#include<iostream>
using namespace std; 

class heap{
private: 
	int arr[100]; 
	int size; 
	
public: 
	heap(){
		arr[0] = -1; 
		size = 0; 
	}

	void print()
	{
		for (int i = 1; i <= size; i++)
		{
			cout << arr[i] << " "; 
		}
		cout << endl; 
	}
	
	void insert( int a )
	{
		size++; 
		int index = size;
		arr[index] = a;
		int parent = index / 2; 
		while (index > 1)
		{
			if (arr[parent] < arr[index])
			{
				std::swap(arr[parent], arr[index]);
				index = parent; 
			}
			else
			{
				return;
			}
		}
	}

	void delete_() 
	{
		arr[1] = arr[size]; 
		size--; 

		int i = 1; 
		while (i < size)
		{
			int lc_index = 2 * i; 
			int rc_index = lc_index + 1; 

			if (lc_index <= size && arr[lc_index] > arr[i] && arr[lc_index] > arr[rc_index])
			{
				swap(arr[lc_index], arr[i]);
				i = lc_index;
			}
			else if (rc_index <= size && arr[rc_index] > arr[i] && arr[rc_index] > arr[lc_index])
			{
				swap(arr[rc_index], arr[i]);
				i = rc_index;
			}
			else
			{
				return;
			}
		}
	}
};

void heapify(int *arr, int n , int i )
{
	int largest = i; 
	int left = 2 * i; 
	int right = 2 * i + 1; 

	if (left < n && arr[largest] < arr[left])
	{
		largest = left; 
	}
	if (right < n && arr[largest] < arr[right])
	{
		largest = right;
	}
	if (largest != i)
	{
		swap(arr[largest], arr[i]);
		heapify(arr, n, largest);
	}
}

void heapsort(int* arr, int size)
{  
	
	if(size>1){
		
		int i;
		i = 1;
		if (arr[size] < arr[1]) 
		{
			
			swap(arr[size], arr[1]);
		}
		size--;

		while (i<size)
		{
			int l = 2 * i ; 
			int r = 2 * i + 1;

			if (l<size && arr[l]>arr[i] && arr[l] > arr[r])
			{
				swap(arr[l], arr[i]);
				i = l;
			}
			else if (r<size && arr[r]>arr[i] && arr[r]>arr[l])
			{
				i = r;
			}

			else
			{
				break;
			}
		
		}

		heapsort(arr, size);

	}

}

int main()
{
	heap h; 
	h.insert(53);
	h.insert(50);
	h.insert(69);
	h.insert(23);
	h.insert(36);
	h.insert(29);
	h.insert(22);
	h.insert(20);
	h.print(); 
	h.delete_();
	h.print();
	// HEAPIFY
	cout << "Heapfying the array = "; 
	int arr[6] = { -1 , 34, 64,71,55,29 };
	int n = 5 ; 
	for (int i = 1; i <= n; i++)
	{
		cout << arr[i] << " ";
	}
	cout << endl;

	cout << "Heafied array is = ";
	for (int i = n / 2; i > 0; i--)
	{
		heapify(arr, n, i );
	}
	for (int i = 1; i <= n; i++)
	{
		cout << arr[i] << " ";
	}
	cout << endl; 

	// HEAP SORT CODE STARTS 
	heapsort(arr, n);
	for (int i = 1; i <= n; i++)
	{
		cout << arr[i] << " ";
	}
	cout << endl;
	return 0; 
}
